name: Initial setup

on:
  push:

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-latest
    if: "!github.event.repository.is_template"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install tree-sitter CLI
        uses: tree-sitter/setup-action/cli@v1
        with:
          tree-sitter-ref: latest
      - name: Remove template files
        run: rm .gitattributes .github/workflows/setup.yml
      - name: Create configuration file
        run: |-
          if [[ ${AUTHOR_EMAIL#*@} == users.noreply.github.com ]]; then
            AUTHOR_DATA="{\"name\": \"$AUTHOR_NAME\"}"
          else
            AUTHOR_DATA="{\"name\": \"$AUTHOR_NAME\", \"email\": \"$AUTHOR_EMAIL\"}"
          fi
          printf '%s\n' >> "$GITHUB_ENV" \
              "AUTHOR_NAME=${AUTHOR_NAME}" \
              "PARSER_NAME=${REPO_NAME#tree-sitter-}"
          jq -rn > tree-sitter.json \
            --arg name "${REPO_NAME#tree-sitter-}" \
            --arg repo "$GITHUB_REPOSITORY" \
            --argjson author "$AUTHOR_DATA" \
            $'{
              "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/config.schema.json",
              "grammars": [{
                  "name": $name,
                  "path": ".",
                  "scope": "source.\($name)",
                  "file-types": [".\($name)"],
                  "injection-regex": "^\($name)$",
                  "highlights": "queries/highlights.scm"
              }],
              "metadata": {
                "links": {
                  "repository": "https://github.com/\($repo)"
                },
                "version": "0.1.0",
                "license": "MIT",
                "authors": [$author]
              }
            }'
        env:
          REPO_NAME: ${{github.event.repository.name}}
          AUTHOR_NAME: ${{github.event.head_commit.author.name}}
          AUTHOR_EMAIL: ${{github.event.head_commit.author.email}}
      - name: Initialize parser files
        run: tree-sitter init
      - name: Update files
        run: |-
          sed -i README.md \
              -e 's/PARSER_NAME/${{env.PARSER_NAME}}/' \
              -e 's/tree-sitter-grammars/${{env.REPO_OWNER}}/'
          sed -i LICENSE \
              -e 's/AUTHOR_NAME/${{env.AUTHOR_NAME}}/'
          sed -i grammar.js \
              -e 's/TODO:/NOTE:/' \
              -e 's/source_file.*/changeme: $ => "",/'
          sed -i src/scanner.c \
              -e 's/PARSER_NAME/${{env.PARSER_NAME}}/'
          sed -i .github/ISSUE_TEMPLATE/bug_report.yml \
              -e 's/PARSER_NAME/${{env.PARSER_NAME}}/' \
              -e 's/tree-sitter-grammars/${{env.REPO_OWNER}}/'
          sed -i .github/ISSUE_TEMPLATE/feature_request.yml \
              -e 's/PARSER_NAME/${{env.PARSER_NAME}}/g'
          mv .github/not-dependabot.yml .github/dependabot.yml
        env:
          REPO_OWNER: ${{github.repository_owner}}
          AUTHOR_NAME: ${{github.event.head_commit.author.name}}
      - name: Create dependencies label
        run: gh label create dependencies -d 'Dependency updates' -c 499ccf
        env:
          GH_TOKEN: ${{github.token}}
      - name: Update commit
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_user_name: ${{github.event.head_commit.author.username}}
          commit_user_email: ${{github.event.head_commit.author.email}}
          commit_message: "feat: initial commit"
          commit_options: --amend
          push_options: --force
          skip_fetch: true
      - name: Add next steps to summary
        run: |-
          printf >> "$GITHUB_STEP_SUMMARY" '%s\n' \
            'The repository has been set up successfully.' \
            'You can now clone and configure it like so:' \
            '' \
            '~~~bash' \
            'git clone ${{github.server_url}}/${{github.repository}}' \
            'cd ${{github.event.repository.name}}' \
            'gh repo edit \' \
            '  --enable-merge-commit=false \' \
            '  --enable-discussions=false \' \
            '  --enable-projects=false \' \
            '  --enable-wiki=false \' \
            '  --add-topic=tree-sitter \' \
            '  --add-topic=parser \' \
            '  --add-topic=${{env.PARSER_NAME}} \' \
            "  -d '$(jq -r .description package.json)'" \
            '~~~'
